2025-09-13 20:09:31 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-13 20:09:33 [Test worker] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:09:33 [Test worker] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-13 20:09:33 [Test worker] DEBUG org.hibernate.SQL - create table inventory_items (current_value numeric(10,2), purchase_price numeric(10,2), quantity integer not null, created_at timestamp(6) not null, item_id bigint generated by default as identity, updated_at timestamp(6) not null, user_id bigint not null, location varchar(100), name varchar(100) not null, description varchar(500), image_url varchar(255), category enum ('BOOKS','CLOTHING','COLLECTIBLES','ELECTRONICS','FURNITURE','OTHER','SPORTS','TOOLS') not null, status enum ('BROKEN','EXCELLENT','FAIR','GOOD','POOR') not null, primary key (item_id))
2025-09-13 20:09:33 [Test worker] DEBUG org.hibernate.SQL - create table users (created_at timestamp(6) not null, updated_at timestamp(6) not null, user_id bigint generated by default as identity, nickname varchar(50) not null, email varchar(100) not null unique, password varchar(255) not null, role enum ('ADMIN','USER') not null, primary key (user_id))
2025-09-13 20:09:35 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-13 20:09:35 [Test worker] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: c067a428-c819-467a-b1ee-813d8db655f8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-13 20:09:41 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:09:41 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-13 20:10:39 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-13 20:10:41 [Test worker] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:10:41 [Test worker] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-13 20:10:41 [Test worker] DEBUG org.hibernate.SQL - create table inventory_items (current_value numeric(10,2), purchase_price numeric(10,2), quantity integer not null, created_at timestamp(6) not null, item_id bigint generated by default as identity, updated_at timestamp(6) not null, user_id bigint not null, location varchar(100), name varchar(100) not null, description varchar(500), image_url varchar(255), category enum ('BOOKS','CLOTHING','COLLECTIBLES','ELECTRONICS','FURNITURE','OTHER','SPORTS','TOOLS') not null, status enum ('BROKEN','EXCELLENT','FAIR','GOOD','POOR') not null, primary key (item_id))
2025-09-13 20:10:41 [Test worker] DEBUG org.hibernate.SQL - create table users (created_at timestamp(6) not null, updated_at timestamp(6) not null, user_id bigint generated by default as identity, nickname varchar(50) not null, email varchar(100) not null unique, password varchar(255) not null, role enum ('ADMIN','USER') not null, primary key (user_id))
2025-09-13 20:10:43 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-13 20:10:43 [Test worker] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 3ef53cf1-9964-430a-b1f8-e98d5c7431b0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-13 20:10:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:10:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-13 20:23:46 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-13 20:23:48 [Test worker] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:23:48 [Test worker] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-13 20:23:48 [Test worker] DEBUG org.hibernate.SQL - create table inventory_items (current_value numeric(10,2), purchase_price numeric(10,2), quantity integer not null, created_at timestamp(6) not null, item_id bigint generated by default as identity, updated_at timestamp(6) not null, user_id bigint not null, location varchar(100), name varchar(100) not null, description varchar(500), image_url varchar(255), category enum ('BOOKS','CLOTHING','COLLECTIBLES','ELECTRONICS','FURNITURE','OTHER','SPORTS','TOOLS') not null, status enum ('BROKEN','EXCELLENT','FAIR','GOOD','POOR') not null, primary key (item_id))
2025-09-13 20:23:48 [Test worker] DEBUG org.hibernate.SQL - create table users (created_at timestamp(6) not null, updated_at timestamp(6) not null, user_id bigint generated by default as identity, nickname varchar(50) not null, email varchar(100) not null unique, password varchar(255) not null, role enum ('ADMIN','USER') not null, primary key (user_id))
2025-09-13 20:23:50 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-13 20:23:50 [Test worker] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 4444f109-d645-4bfb-a588-d1c25b3bc15c

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-13 20:23:57 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-13 20:23:57 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-14 10:25:37 [Test worker] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-14 10:25:38 [Test worker] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-14 10:25:38 [Test worker] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-14 10:25:38 [Test worker] DEBUG org.hibernate.SQL - create table inventory_items (current_value numeric(10,2), purchase_price numeric(10,2), quantity integer not null, created_at timestamp(6) not null, item_id bigint generated by default as identity, updated_at timestamp(6) not null, user_id bigint not null, location varchar(100), name varchar(100) not null, description varchar(500), image_url varchar(255), category enum ('BOOKS','CLOTHING','COLLECTIBLES','ELECTRONICS','FURNITURE','OTHER','SPORTS','TOOLS') not null, status enum ('BROKEN','EXCELLENT','FAIR','GOOD','POOR') not null, primary key (item_id))
2025-09-14 10:25:38 [Test worker] DEBUG org.hibernate.SQL - create table users (created_at timestamp(6) not null, updated_at timestamp(6) not null, user_id bigint generated by default as identity, nickname varchar(50) not null, email varchar(100) not null unique, password varchar(255) not null, role enum ('ADMIN','USER') not null, primary key (user_id))
2025-09-14 10:25:40 [Test worker] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-14 10:25:40 [Test worker] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: e03ce617-0cfd-46e8-b3c9-3f255d39f9d5

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-14 10:25:44 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-14 10:25:44 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-14 10:26:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-14 10:26:19 [main] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-14 10:26:19 [main] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-14 10:26:19 [main] DEBUG org.hibernate.SQL - create table inventory_items (current_value numeric(10,2), purchase_price numeric(10,2), quantity integer not null, created_at timestamp(6) not null, item_id bigint generated by default as identity, updated_at timestamp(6) not null, user_id bigint not null, location varchar(100), name varchar(100) not null, description varchar(500), image_url varchar(255), category enum ('BOOKS','CLOTHING','COLLECTIBLES','ELECTRONICS','FURNITURE','OTHER','SPORTS','TOOLS') not null, status enum ('BROKEN','EXCELLENT','FAIR','GOOD','POOR') not null, primary key (item_id))
2025-09-14 10:26:19 [main] DEBUG org.hibernate.SQL - create table users (created_at timestamp(6) not null, updated_at timestamp(6) not null, user_id bigint generated by default as identity, nickname varchar(50) not null, email varchar(100) not null unique, password varchar(255) not null, role enum ('ADMIN','USER') not null, primary key (user_id))
2025-09-14 10:26:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-14 10:26:20 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 5e0578cb-6b19-4f02-88c0-15ee305be8f4

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-14 10:26:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists inventory_items cascade 
2025-09-14 10:26:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - drop table if exists users cascade 
2025-09-14 11:56:11 [main] INFO  c.b.t.b.BackendTemplateApplication - Starting BackendTemplateApplication using Java 21.0.1 with PID 19396 (D:\source\Inventory\backend-template\out\production\classes started by Choonsik in D:\source\Inventory\backend-template)
2025-09-14 11:56:11 [main] DEBUG c.b.t.b.BackendTemplateApplication - Running with Spring Boot v3.3.5, Spring v6.1.14
2025-09-14 11:56:11 [main] INFO  c.b.t.b.BackendTemplateApplication - The following 1 profile is active: "dev"
2025-09-14 11:56:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-14 11:56:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 2 JPA repository interfaces.
2025-09-14 11:56:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-14 11:56:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-14 11:56:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-09-14 11:56:13 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-14 11:56:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2138 ms
2025-09-14 11:56:13 [main] DEBUG c.b.t.b.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-09-14 11:56:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-14 11:56:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-09-14 11:56:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-14 11:56:14 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-14 11:56:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-14 11:56:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@2a984952
2025-09-14 11:56:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-14 11:56:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-14 11:56:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-14 11:56:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-14 11:56:15 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-14 11:56:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-14 11:56:16 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 715faabb-9c9e-4edb-8234-40dd31acc0ff

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-14 11:56:16 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-09-14 11:56:16 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-09-14 11:56:16 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-14 11:56:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-09-14 11:56:17 [main] INFO  c.b.t.b.BackendTemplateApplication - Started BackendTemplateApplication in 6.631 seconds (process running for 7.319)
2025-09-14 11:56:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-14 11:56:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-14 11:56:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-14 11:56:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/signup
2025-09-14 11:56:43 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 11:56:43 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /api/auth/signup
2025-09-14 11:56:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/signup
2025-09-14 11:56:44 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 11:56:44 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured OPTIONS /api/auth/signup
2025-09-14 12:02:08 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-14 12:02:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-14 12:02:08 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-09-14 12:02:13 [main] INFO  c.b.t.b.BackendTemplateApplication - Starting BackendTemplateApplication using Java 21.0.1 with PID 20516 (D:\source\Inventory\backend-template\out\production\classes started by Choonsik in D:\source\Inventory\backend-template)
2025-09-14 12:02:13 [main] DEBUG c.b.t.b.BackendTemplateApplication - Running with Spring Boot v3.3.5, Spring v6.1.14
2025-09-14 12:02:13 [main] INFO  c.b.t.b.BackendTemplateApplication - The following 1 profile is active: "dev"
2025-09-14 12:02:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-14 12:02:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 2 JPA repository interfaces.
2025-09-14 12:02:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-09-14 12:02:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-09-14 12:02:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-09-14 12:02:16 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-09-14 12:02:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2108 ms
2025-09-14 12:02:16 [main] DEBUG c.b.t.b.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-09-14 12:02:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-14 12:02:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-09-14 12:02:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-09-14 12:02:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-14 12:02:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-14 12:02:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.mariadb.jdbc.Connection@54e94de9
2025-09-14 12:02:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-14 12:02:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-09-14 12:02:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-09-14 12:02:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-14 12:02:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-09-14 12:02:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-14 12:02:19 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 9a6f65d1-f2d3-4d2f-8433-7cee1244235b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-14 12:02:19 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-09-14 12:02:19 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-09-14 12:02:19 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-09-14 12:02:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-09-14 12:02:20 [main] INFO  c.b.t.b.BackendTemplateApplication - Started BackendTemplateApplication in 6.968 seconds (process running for 7.459)
2025-09-14 12:02:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-14 12:02:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-14 12:02:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-14 12:02:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/signup
2025-09-14 12:02:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/signup
2025-09-14 12:02:30 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:02:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/signup
2025-09-14 12:02:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=? 
    limit
        ?
2025-09-14 12:02:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.nickname=? 
    limit
        ?
2025-09-14 12:02:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, nickname, password, role, updated_at) 
    values
        (?, ?, ?, ?, ?, ?) 
    returning user_id
2025-09-14 12:02:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/login
2025-09-14 12:02:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-09-14 12:02:47 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:02:47 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-09-14 12:02:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:02:47 [http-nio-8080-exec-4] INFO  c.b.t.b.d.u.c.UserController - 로그인 성공: moodeary@gmail.com
2025-09-14 12:02:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/me
2025-09-14 12:02:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:02:47 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:02:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:02:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory
2025-09-14 12:02:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:47 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:47 [http-nio-8080-exec-8] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-09-14 12:02:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:58 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:58 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:59 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:02:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:02:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:02:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:00 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:19 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:19 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:20 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-09-14 12:03:34 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:03:34 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-09-14 12:03:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:03:34 [http-nio-8080-exec-7] WARN  c.b.t.b.d.u.c.UserController - 로그인 실패: 이메일 또는 비밀번호가 올바르지 않습니다., 이메일: moodeary@gmail.com
2025-09-14 12:03:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-09-14 12:03:36 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:03:36 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-09-14 12:03:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:03:36 [http-nio-8080-exec-8] WARN  c.b.t.b.d.u.c.UserController - 로그인 실패: 이메일 또는 비밀번호가 올바르지 않습니다., 이메일: moodeary@gmail.com
2025-09-14 12:03:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
2025-09-14 12:03:38 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:03:38 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
2025-09-14 12:03:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:03:38 [http-nio-8080-exec-9] INFO  c.b.t.b.d.u.c.UserController - 로그인 성공: moodeary@gmail.com
2025-09-14 12:03:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:03:38 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:03:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:03:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:38 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:03:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:03:40 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:03:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:06:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:06:04 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:06:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:06:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:06:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:06:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:06:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:06:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:06:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:06:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:06:32 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:06:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:07:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:07:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:07:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:07:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:07:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:07:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:04 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:08 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:09 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:12 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:12 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:13 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:14 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:08:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:08:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:08:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 12:08:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 12:08:30 [http-nio-8080-exec-5] ERROR c.b.t.b.c.e.GlobalExceptionHandler - Runtime Exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:135)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.basic.template.backend_template.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 97] (through reference chain: com.basic.template.backend_template.domain.inventory.dto.InventoryItemReqDto["status"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1958)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1245)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:447)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:304)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:273)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 138 common frames omitted
2025-09-14 12:09:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:09:54 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:09:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:10:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:10:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:10:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:10:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:10:07 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:10:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:10:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:10:16 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:10:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:11:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:11:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:11:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:11:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:11:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:11:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:11:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:11:17 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:11:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:11:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:11:18 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:11:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:11:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:11:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:11:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:11:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:11:19 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:11:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:11:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 12:11:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 12:11:49 [http-nio-8080-exec-6] ERROR c.b.t.b.c.e.GlobalExceptionHandler - Runtime Exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:135)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.basic.template.backend_template.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 97] (through reference chain: com.basic.template.backend_template.domain.inventory.dto.InventoryItemReqDto["status"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1958)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1245)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:447)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:304)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:273)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 138 common frames omitted
2025-09-14 12:11:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 12:11:58 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 12:11:58 [http-nio-8080-exec-7] ERROR c.b.t.b.c.e.GlobalExceptionHandler - Runtime Exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:406)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:161)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:135)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.basic.template.backend_template.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.basic.template.backend_template.domain.inventory.entity.ItemStatus` from String "AVAILABLE": not one of the values accepted for Enum class: [POOR, FAIR, GOOD, EXCELLENT, BROKEN]
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 97] (through reference chain: com.basic.template.backend_template.domain.inventory.dto.InventoryItemReqDto["status"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1958)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1245)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeAltString(EnumDeserializer.java:447)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(EnumDeserializer.java:304)
	at com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(EnumDeserializer.java:273)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	... 138 common frames omitted
2025-09-14 12:13:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:13:10 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:13:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:13:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:13:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:13:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 12:14:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 12:14:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-09-14 12:14:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 12:14:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:31 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:14:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:14:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:14:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:33 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:47 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:49 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:49 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:14:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:14:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:14:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:15:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:15:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:15:18 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:15:18 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:15:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:15:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:17:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:40 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:17:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:17:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:22:17 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:22:18 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:22:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:22:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:22:18 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:22:18 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:22:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:22:27 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:22:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:22:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:22:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:22:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:22:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 12:22:33 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 12:22:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 12:22:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 12:22:33 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 12:22:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:48 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /login
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:46:52 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 12:53:04 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 13:04:50 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/me
2025-09-14 13:04:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:04:51 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:04:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:04:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory
2025-09-14 13:04:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:04:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:04:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:06:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:06:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:06:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:06:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:06:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:06:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:22 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:28 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:29 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:29 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:31 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:31 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:32 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:45 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:07:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:07:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:07:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:10:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:10:38 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:10:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:10:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 13:10:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 13:10:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-09-14 13:10:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 13:10:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:10:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:10:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:13:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:13:53 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:13:53 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:14:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:14:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:14:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:14:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:14:31 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:14:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:14:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:14:37 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:15:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 13:15:33 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 13:15:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-09-14 13:15:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 13:15:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:15:33 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:15:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:19:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:19:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:19:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:19:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:19:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:19:23 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:19:23 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:19:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:19:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:19:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:19:29 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:19:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:19:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:19:29 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:19:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:19:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:19:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:19:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:19:48 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:19:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:19:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:19:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:19:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:20:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:20:01 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:20:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:20:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 13:20:13 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 13:20:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 13:20:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:20:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:20:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:21:51 [http-nio-8080-exec-7] INFO  o.a.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name [0x000x0e80xc9W|[0x1f0x94*0xbb0x000x000x000x000x00...]. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:406)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:257)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-09-14 13:24:08 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory/1
2025-09-14 13:24:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/inventory/1
2025-09-14 13:24:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/inventory/1
2025-09-14 13:24:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.item_id=? 
        and ii1_0.user_id=?
2025-09-14 13:24:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        inventory_items 
    where
        item_id=?
2025-09-14 13:24:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:24:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:24:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:27:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/inventory
2025-09-14 13:27:54 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/inventory
2025-09-14 13:27:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-09-14 13:27:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 13:27:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:27:54 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:27:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:28:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:28:52 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:28:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:32 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:39 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:40 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:40 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:29:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:29:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:29:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory/2
2025-09-14 13:30:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/inventory/2
2025-09-14 13:30:05 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/inventory/2
2025-09-14 13:30:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.item_id=? 
        and ii1_0.user_id=?
2025-09-14 13:30:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 13:30:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:05 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/inventory/2
2025-09-14 13:30:13 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/inventory/2
2025-09-14 13:30:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.item_id=? 
        and ii1_0.user_id=?
2025-09-14 13:30:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        inventory_items
        (category, created_at, current_value, description, image_url, location, name, purchase_price, quantity, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning item_id
2025-09-14 13:30:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:13 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory/6
2025-09-14 13:30:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/inventory/6
2025-09-14 13:30:27 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/inventory/6
2025-09-14 13:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.item_id=? 
        and ii1_0.user_id=?
2025-09-14 13:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        inventory_items 
    where
        item_id=?
2025-09-14 13:30:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:35 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:36 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:36 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:58 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 13:30:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 13:30:59 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 13:30:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-14 15:34:16 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-09-14 16:01:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/inventory
2025-09-14 16:01:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 16:01:15 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 16:01:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 16:01:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 16:01:16 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 16:01:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 16:05:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /api/auth/me
2025-09-14 16:05:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/auth/me
2025-09-14 16:05:51 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/auth/me
2025-09-14 16:05:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.nickname,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-09-14 16:05:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/inventory
2025-09-14 16:05:51 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/inventory
2025-09-14 16:05:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ii1_0.item_id,
        ii1_0.category,
        ii1_0.created_at,
        ii1_0.current_value,
        ii1_0.description,
        ii1_0.image_url,
        ii1_0.location,
        ii1_0.name,
        ii1_0.purchase_price,
        ii1_0.quantity,
        ii1_0.status,
        ii1_0.updated_at,
        ii1_0.user_id 
    from
        inventory_items ii1_0 
    where
        ii1_0.user_id=? 
    order by
        ii1_0.created_at desc 
    limit
        ?
2025-09-14 16:19:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-14 16:19:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-09-14 16:19:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
